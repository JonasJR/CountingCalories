// Generated by CoffeeScript 1.10.0
(function() {
  var addDateListeners, createChart, createEventData, getBodyData, getdate;

  $(function() {
    var calendar, eventData;
    calendar = JSON.parse(localStorage.getItem("calendar"));
    eventData = createEventData(calendar);
    $("#my-calendar").zabuto_calendar({
      language: "en",
      data: eventData
    });
    return addDateListeners(calendar);
  });


  /*
  
  
    date: 2016-03-10,
    items: [{},{},{}],
    totalFat: 300,
    totalProtein: 150,
    totalCarb: 30
    totalKCal
   */

  createEventData = function(calendar) {
    var returnData;
    returnData = [];
    if (calendar === null) {
      return;
    }
    calendar.forEach(function(day) {
      return returnData.push({
        date: day.date,
        badge: true,
        title: day.date,
        body: getBodyData(day),
        footer: '<button class="btn btn-primary">Mer information</button>',
        classname: "purple-event",
        modal: true
      });
    });
    return returnData;
  };

  getBodyData = function(day) {
    var body;
    body = "<div id=\"piechart_" + day.date + "\" class=\"piechart\"></div>";
    return body;
  };

  createChart = function(day) {
    var chart;
    console.log(day);
    return chart = AmCharts.makeChart("piechart_" + day.date, {
      type: "pie",
      theme: "none",
      dataProvider: [
        {
          Typ: "Fett",
          Gram: day.totalFat
        }, {
          Typ: "Kolhydrater",
          Gram: day.totalCarb
        }, {
          Typ: "Protein",
          Gram: day.totalProtein
        }
      ],
      valueField: "Gram",
      titleField: "Typ",
      balloon: {
        fixedPosition: true
      },
      "export": {
        enabled: true
      }
    });
  };

  addDateListeners = function(calendar) {
    if (calendar === null) {
      return;
    }
    return calendar.forEach(function(day) {
      return $("#zabuto_calendar_" + day.date).on("click", function() {
        return createChart(day);
      });
    });
  };

  getdate = function() {
    var d;
    Date.prototype.yyyymmdd = function() {
      var dd, mm, ref, ref1, yyyy;
      yyyy = this.getFullYear().toString();
      mm = (this.getMonth() + 1).toString();
      dd = this.getDate().toString();
      return yyyy + "-" + ((ref = mm[1]) != null ? ref : {
        mm: "0" + mm[0]
      }) + "-" + ((ref1 = dd[1]) != null ? ref1 : {
        dd: "0" + dd[0]
      });
    };
    d = new Date();
    return d.yyyymmdd();
  };

}).call(this);
